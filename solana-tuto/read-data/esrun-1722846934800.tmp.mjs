process.argv = [process.argv[0], ...process.argv.slice(3)];

		import __esrun_url from 'url';

		import { createRequire as __esrun_createRequire } from "module";

		const __esrun_fileUrl = __esrun_url.pathToFileURL("esrun-1722846934800.tmp.mjs");

		const require = __esrun_createRequire(__esrun_fileUrl);
// check-balance.ts
import { Connection, LAMPORTS_PER_SOL, PublicKey } from "../../node_modules/@solana/web3.js/lib/index.cjs.js";
async function getBalance(publicKeyStr) {
  try {
    const publicKey = new PublicKey(publicKeyStr);
    const connection = new Connection(
      "https://api.mainnet.solana.com",
      "confirmed"
    );
    const balanceInLamps = await connection.getBalance(publicKey);
    const balanceInSOL = balanceInLamps / LAMPORTS_PER_SOL;
    console.log(
      `\u{1F4B0} Finished! The balance for the wallet at address ${publicKeyStr} is ${balanceInSOL} SOL.`
    );
  } catch (error) {
    console.error(
      `Error fetching balance for ${publicKeyStr}: ${error.message}`
    );
  }
}
var walletAddresses = [
  "3CgvbiM3op4vjrrjH2zcrQUwsqh5veNVRjFCB9N6sRoD",
  "4vb9kUoSzRj4vSCznPr9YpherEkfXn128tAhzKszd18X",
  "FqRXiaGCPTknwME5xJDfKvTDctkMraBDqsVRcK7yG1kA",
  "9nnLbotNTcUhvbrsA6Mdkx45Sm82G35zo28AqUvjExn8"
];
walletAddresses.forEach((e) => getBalance(e));
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiY2hlY2stYmFsYW5jZS50cyJdLAogICJzb3VyY2VSb290IjogIkM6XFxVc2Vyc1xccHJhdGhcXE9uZURyaXZlXFxEZXNrdG9wXFxQcm9qZWN0c1xcd2ViM19wcm9qZWN0c1xcc29sZGV2LXR1dG9cXHJlYWQtZGF0YSIsCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBHZXQgQmFsYW5jZVxyXG5pbXBvcnQgeyBDb25uZWN0aW9uLCBMQU1QT1JUU19QRVJfU09MLCBQdWJsaWNLZXkgfSBmcm9tIFwiQHNvbGFuYS93ZWIzLmpzXCI7XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXRCYWxhbmNlKHB1YmxpY0tleVN0cjogc3RyaW5nKSB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIENyZWF0ZSBhIFB1YmxpY0tleSBvYmplY3QgZnJvbSB0aGUgd2FsbGV0IGFkZHJlc3NcclxuICAgIGNvbnN0IHB1YmxpY0tleSA9IG5ldyBQdWJsaWNLZXkocHVibGljS2V5U3RyKTtcclxuXHJcbiAgICAvLyBDb25uZWN0IHRvIFNvbGFuYSBtYWlubmV0XHJcbiAgICBjb25zdCBjb25uZWN0aW9uID0gbmV3IENvbm5lY3Rpb24oXHJcbiAgICAgIFwiaHR0cHM6Ly9hcGkubWFpbm5ldC5zb2xhbmEuY29tXCIsXHJcbiAgICAgIFwiY29uZmlybWVkXCJcclxuICAgICk7XHJcblxyXG4gICAgLy8gR2V0IHRoZSBiYWxhbmNlIGluIGxhbXBvcnRzICh0aGUgc21hbGxlc3QgdW5pdCBvZiBTT0wpXHJcbiAgICBjb25zdCBiYWxhbmNlSW5MYW1wcyA9IGF3YWl0IGNvbm5lY3Rpb24uZ2V0QmFsYW5jZShwdWJsaWNLZXkpO1xyXG5cclxuICAgIC8vIENvbnZlcnQgdGhlIGJhbGFuY2UgdG8gU09MXHJcbiAgICBjb25zdCBiYWxhbmNlSW5TT0wgPSBiYWxhbmNlSW5MYW1wcyAvIExBTVBPUlRTX1BFUl9TT0w7XHJcblxyXG4gICAgLy8gT3V0cHV0IHRoZSBiYWxhbmNlXHJcbiAgICBjb25zb2xlLmxvZyhcclxuICAgICAgYFx1RDgzRFx1RENCMCBGaW5pc2hlZCEgVGhlIGJhbGFuY2UgZm9yIHRoZSB3YWxsZXQgYXQgYWRkcmVzcyAke3B1YmxpY0tleVN0cn0gaXMgJHtiYWxhbmNlSW5TT0x9IFNPTC5gXHJcbiAgICApO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAvLyBIYW5kbGUgZXJyb3JzLCBzdWNoIGFzIGludmFsaWQgd2FsbGV0IGFkZHJlc3Nlc1xyXG4gICAgY29uc29sZS5lcnJvcihcclxuICAgICAgYEVycm9yIGZldGNoaW5nIGJhbGFuY2UgZm9yICR7cHVibGljS2V5U3RyfTogJHtlcnJvci5tZXNzYWdlfWBcclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBMaXN0IG9mIGZhbW91cyBTb2xhbmEgd2FsbGV0IGFkZHJlc3Nlc1xyXG5jb25zdCB3YWxsZXRBZGRyZXNzZXMgPSBbXHJcbiAgXCIzQ2d2YmlNM29wNHZqcnJqSDJ6Y3JRVXdzcWg1dmVOVlJqRkNCOU42c1JvRFwiLFxyXG4gIFwiNHZiOWtVb1N6Umo0dlNDem5QcjlZcGhlckVrZlhuMTI4dEFoektzemQxOFhcIixcclxuICBcIkZxUlhpYUdDUFRrbndNRTV4SkRmS3ZURGN0a01yYUJEcXNWUmNLN3lHMWtBXCIsXHJcbiAgXCI5bm5MYm90TlRjVWh2YnJzQTZNZGt4NDVTbTgyRzM1em8yOEFxVXZqRXhuOFwiLFxyXG5dO1xyXG5cclxuLy8gR2V0IGJhbGFuY2UgZm9yIGVhY2ggd2FsbGV0IGFkZHJlc3Ncclxud2FsbGV0QWRkcmVzc2VzLmZvckVhY2goKGUpID0+IGdldEJhbGFuY2UoZSkpO1xyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQ0EsU0FBUyxZQUFZLGtCQUFrQixpQkFBaUI7QUFFeEQsZUFBZSxXQUFXLGNBQXNCO0FBQzlDLE1BQUk7QUFFRixVQUFNLFlBQVksSUFBSSxVQUFVLFlBQVk7QUFHNUMsVUFBTSxhQUFhLElBQUk7QUFBQSxNQUNyQjtBQUFBLE1BQ0E7QUFBQSxJQUNGO0FBR0EsVUFBTSxpQkFBaUIsTUFBTSxXQUFXLFdBQVcsU0FBUztBQUc1RCxVQUFNLGVBQWUsaUJBQWlCO0FBR3RDLFlBQVE7QUFBQSxNQUNOLDZEQUFzRCxtQkFBbUI7QUFBQSxJQUMzRTtBQUFBLEVBQ0YsU0FBUyxPQUFQO0FBRUEsWUFBUTtBQUFBLE1BQ04sOEJBQThCLGlCQUFpQixNQUFNO0FBQUEsSUFDdkQ7QUFBQSxFQUNGO0FBQ0Y7QUFHQSxJQUFNLGtCQUFrQjtBQUFBLEVBQ3RCO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQ0Y7QUFHQSxnQkFBZ0IsUUFBUSxDQUFDLE1BQU0sV0FBVyxDQUFDLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==

	